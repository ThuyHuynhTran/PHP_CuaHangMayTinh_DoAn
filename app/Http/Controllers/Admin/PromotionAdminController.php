<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Promotion;
use App\Models\Order;

class PromotionAdminController extends Controller
{
    /** üìÑ Hi·ªÉn th·ªã danh s√°ch khuy·∫øn m√£i */
    public function index()
    {
        $promotions = Promotion::orderBy('id', 'desc')->paginate(10);
        return view('admin.promotions.index', compact('promotions'));
    }

    /** ‚ûï Trang th√™m khuy·∫øn m√£i m·ªõi */
    public function create()
    {
        return view('admin.promotions.create');
    }

    /** üíæ L∆∞u khuy·∫øn m√£i m·ªõi */
    public function store(Request $request)
    {
        $data = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
            'discount_percent' => 'required|numeric|min:0|max:100',
            'start_date' => 'required|date',
            'end_date' => 'required|date|after_or_equal:start_date',
        ]);

        Promotion::create($data);

        return redirect()
            ->route('admin.promotions.index')
            ->with('success', 'Th√™m khuy·∫øn m√£i th√†nh c√¥ng!');
    }

    /**
     * ‚úèÔ∏è Hi·ªÉn th·ªã form ch·ªânh s·ª≠a khuy·∫øn m√£i
     *
     * @param  \App\Models\Promotion $promotion
     * @return \Illuminate\View\View
     */
    public function edit(Promotion $promotion) // <-- THAY ƒê·ªîI ·ªû ƒê√ÇY
    {
        // Laravel t·ª± ƒë·ªông t√¨m khuy·∫øn m√£i d·ª±a tr√™n ID trong URL
        // Kh√¥ng c·∫ßn d√πng Promotion::findOrFail($id) n·ªØa
        return view('admin.promotions.edit', compact('promotion'));
    }

    /**
     * üîÅ C·∫≠p nh·∫≠t khuy·∫øn m√£i
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Promotion $promotion
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(Request $request, Promotion $promotion) // <-- THAY ƒê·ªîI ·ªû ƒê√ÇY
    {
        // Kh√¥ng c·∫ßn d√πng Promotion::findOrFail($id) n·ªØa
        $data = $request->validate([
            'title' => 'required|string|max:255',
            'description' => 'nullable|string',
            'discount_percent' => 'required|numeric|min:0|max:100',
            'start_date' => 'required|date',
            'end_date' => 'required|date|after_or_equal:start_date',
        ]);

        $promotion->update($data);

        return redirect()
            ->route('admin.promotions.index')
            ->with('success', 'C·∫≠p nh·∫≠t khuy·∫øn m√£i th√†nh c√¥ng!');
    }

    /**
     * ‚ùå X√≥a 1 khuy·∫øn m√£i
     *
     * @param  \App\Models\Promotion $promotion
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy(Promotion $promotion) // <-- THAY ƒê·ªîI ·ªû ƒê√ÇY
    {
        // Kh√¥ng c·∫ßn d√πng Promotion::findOrFail($id) n·ªØa
        try {
            // G·ª° li√™n k·∫øt v·ªõi orders n·∫øu c√≥
            Order::where('promotion_id', $promotion->id)->update(['promotion_id' => null]);
            $promotion->delete();

            return redirect()
                ->back()
                ->with('success', 'X√≥a khuy·∫øn m√£i th√†nh c√¥ng!');
        } catch (\Exception $e) {
            return redirect()
                ->back()
                ->with('error', 'Kh√¥ng th·ªÉ x√≥a khuy·∫øn m√£i: ' . $e->getMessage());
        }
    }

    /** üóëÔ∏è X√≥a nhi·ªÅu khuy·∫øn m√£i c√πng l√∫c */
    public function bulkDelete(Request $request)
    {
        // Chuy·ªÉn chu·ªói ids t·ª´ '1,2,3' th√†nh m·∫£ng [1, 2, 3]
        $ids = explode(',', $request->input('ids'));

        // L·ªçc b·ªè c√°c gi√° tr·ªã r·ªóng ho·∫∑c kh√¥ng ph·∫£i s·ªë
        $ids = array_filter($ids, 'is_numeric');

        if (empty($ids)) {
            return redirect()->back()->with('error', 'Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt khuy·∫øn m√£i ƒë·ªÉ x√≥a.');
        }

        try {
            // C·∫≠p nh·∫≠t c√°c ƒë∆°n h√†ng li√™n quan
            Order::whereIn('promotion_id', $ids)->update(['promotion_id' => null]);
            
            // X√≥a c√°c khuy·∫øn m√£i
            Promotion::whereIn('id', $ids)->delete();

            return redirect()
                ->route('admin.promotions.index')
                ->with('success', 'ƒê√£ x√≥a c√°c khuy·∫øn m√£i ƒë∆∞·ª£c ch·ªçn th√†nh c√¥ng!');
        } catch (\Exception $e) {
            return redirect()
                ->back()
                ->with('error', 'Kh√¥ng th·ªÉ x√≥a do r√†ng bu·ªôc d·ªØ li·ªáu: ' . $e->getMessage());
        }
    }
}
