<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\DienThoai;
use App\Models\DanhMuc;

class ProductAdminController extends Controller
{
    /**
     * üìã Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m
     */
    public function index(Request $request)
    {
        // üîç Kh·ªüi t·∫°o query builder
        $query = DienThoai::with('category')->orderBy('id', 'desc');

        // üß© L·ªçc theo danh m·ª•c (n·∫øu c√≥)
        if ($request->filled('danh_muc_id')) {
            $query->where('danh_muc_id', $request->danh_muc_id);
        }

        // üß© L·ªçc theo th∆∞∆°ng hi·ªáu (n·∫øu c√≥)
        if ($request->filled('thuong_hieu')) {
            $query->where('thuong_hieu', 'like', '%' . $request->thuong_hieu . '%');
        }

        // üì¶ L·∫•y danh s√°ch danh m·ª•c ƒë·ªÉ hi·ªÉn th·ªã trong form l·ªçc
        $categories = DanhMuc::all();

        // üìÑ Ph√¢n trang + gi·ªØ nguy√™n query khi chuy·ªÉn trang
        $products = $query->paginate(10)->appends($request->query());

        return view('admin.products.index', compact('products', 'categories'));
    }

    /**
     * ‚ûï Form th√™m s·∫£n ph·∫©m
     */
    public function create()
    {
        $categories = DanhMuc::all();
        return view('admin.products.create', compact('categories'));
    }

    /**
     * üíæ L∆∞u s·∫£n ph·∫©m m·ªõi v√†o database
     */
    public function store(Request $request)
    {
        $data = $request->validate([
            'ten_sp'        => 'required|string|max:255',
            'mo_ta'         => 'nullable|string',
            'gia'           => 'required|numeric|min:0',
            'so_luong_kho'  => 'required|integer|min:0', // üÜï Th√™m ki·ªÉm tra s·ªë l∆∞·ª£ng t·ªìn
            'thuong_hieu'   => 'nullable|string|max:255', // üÜï Cho ph√©p nh·∫≠p th∆∞∆°ng hi·ªáu
            'danh_muc_id'   => 'required|exists:danh_mucs,id',
            'duong_dan'     => 'nullable|image|max:2048',
        ]);

        // Ki·ªÉm tra th∆∞ m·ª•c ·∫£nh t·ªìn t·∫°i
        if (!file_exists(public_path('assets/img'))) {
            mkdir(public_path('assets/img'), 0777, true);
        }

        // N·∫øu c√≥ upload ·∫£nh
        if ($request->hasFile('duong_dan')) {
            $file = $request->file('duong_dan');
            $filename = time() . '.' . $file->getClientOriginalExtension();
            $file->move(public_path('assets/img'), $filename);
            $data['duong_dan'] = $filename;
        }

        // T·∫°o s·∫£n ph·∫©m
        DienThoai::create($data);

        return redirect()->route('admin.products.index')
                         ->with('success', 'Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!');
    }

    /**
     * ‚úèÔ∏è Form ch·ªânh s·ª≠a s·∫£n ph·∫©m
     */
    public function edit($id)
    {
        $product = DienThoai::findOrFail($id);
        $categories = DanhMuc::all();
        return view('admin.products.edit', compact('product', 'categories'));
    }

    /**
     * üîÑ C·∫≠p nh·∫≠t s·∫£n ph·∫©m
     */
    public function update(Request $request, $id)
    {
        $product = DienThoai::findOrFail($id);

        $data = $request->validate([
            'ten_sp'        => 'required|string|max:255',
            'gia'           => 'required|numeric|min:0',
            'so_luong_kho'  => 'required|integer|min:0', // üÜï C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng t·ªìn
            'thuong_hieu'   => 'nullable|string|max:255', // üÜï Cho ph√©p s·ª≠a th∆∞∆°ng hi·ªáu
            'danh_muc_id'   => 'required|exists:danh_mucs,id',
            'mo_ta'         => 'nullable|string',
            'duong_dan'     => 'nullable|image|max:2048'
        ]);

        // N·∫øu c√≥ upload ·∫£nh m·ªõi
        if ($request->hasFile('duong_dan')) {
            $oldImagePath = public_path('assets/img/' . $product->duong_dan);

            // X√≥a ·∫£nh c≈© n·∫øu c√≥
            if ($product->duong_dan && file_exists($oldImagePath)) {
                @unlink($oldImagePath);
            }

            // L∆∞u ·∫£nh m·ªõi
            $file = $request->file('duong_dan');
            $filename = time() . '.' . $file->getClientOriginalExtension();
            $file->move(public_path('assets/img'), $filename);
            $data['duong_dan'] = $filename;
        }

        // C·∫≠p nh·∫≠t s·∫£n ph·∫©m
        $product->update($data);

        return redirect()->route('admin.products.index')
                         ->with('success', 'C·∫≠p nh·∫≠t s·∫£n ph·∫©m th√†nh c√¥ng!');
    }

    /**
     * ‚ùå X√≥a s·∫£n ph·∫©m
     */
    public function destroy($id)
    {
        $product = DienThoai::findOrFail($id);

        try {
            if ($product->duong_dan) {
                $imagePath = public_path('assets/img/' . $product->duong_dan);
                if (file_exists($imagePath)) {
                    @unlink($imagePath);
                }
            }

            $product->delete();

            return redirect()->route('admin.products.index')
                             ->with('success', 'X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!');
        } catch (\Exception $e) {
            return redirect()->route('admin.products.index')
                             ->with('error', 'ƒê√£ x·∫£y ra l·ªói khi x√≥a s·∫£n ph·∫©m!');
        }
    }
}
